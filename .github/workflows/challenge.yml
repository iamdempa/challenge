name: Challenge Jobs

on:
  push:
    branches: [ main ]

env:
  IMAGE_NAME: hello
  IMAGE_TAG: v2

jobs:

  BUILD_AND_PUSH:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN_REPOSITORY }}
      -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: app
          push: true
          tags: ghcr.io/${{ github.repository }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          
  Test:
    needs: BUILD_AND_PUSH
    runs-on: ubuntu-latest
    strategy:
      matrix:
        customers: ["A", "B", "C", "NOT-A-CUSTOMER"]
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --no-cache-dir --upgrade -r app/requirements.txt

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Test with pytest for CUSTOMER_NAME=${{ matrix.customers }}
        run: |
          export CUSTOMER_NAME=${{ matrix.customers }}
          pytest                 