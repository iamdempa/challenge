name: Challenge Jobs

on:
  push:
    branches: [ main ]

env:
  IMAGE_NAME: hello
  IMAGE_TAG: v2

jobs:
  # build_and_push:

  #   runs-on: ubuntu-latest
  #   steps:
  #     -
  #       name: Checkout
  #       uses: actions/checkout@v3
  #     -
  #       name: Set up QEMU
  #       uses: docker/setup-qemu-action@v2
  #     -
  #       name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v2

  #     -
  #       name: Login to GitHub Container Registry
  #       uses: docker/login-action@v2
  #       with:
  #         registry: ghcr.io
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.TOKEN_REPOSITORY }}
  #     -
  #       name: Build and push
  #       uses: docker/build-push-action@v3
  #       with:
  #         context: app
  #         push: true
  #         tags: ghcr.io/${{ github.repository }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

  container-test-job:
    # needs: build_and_push
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/iamdempa/challenge/hello:v2
      credentials:
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN_REPOSITORY }}    
      env:
        CUSTOMER_NAME: A
    steps:
      - name: Test
        shell: python
        run: |
          pytest

  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8"]
        customers: ["A", "B", "C"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest fastapi httpx uvicorn pydantic requests
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Test with pytest
        run: |
          export CUSTOMER_NAME=A
          pytest
          sleep 5

          export CUSTOMER_NAME=B
          pytest
          sleep 5
          
          export CUSTOMER_NAME=AC
          pytest                    

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: build_and_push
  #   steps:
  #     - 
  #       uses: debianmaster/actions-k3s@master
  #       id: k3s
  #       with:
  #         version: 'latest'
  #     - 
  #       name: Check cluster nodes
  #       run: kubectl get nodes